@startuml

title __ANIMAL's Class Diagram__\n

  namespace model {
    namespace item {
      namespace animal {
        abstract class model.item.animal.AnimalAbstract {
            # hunger : int
            # isAlive : boolean
            # thirst : int
            # typeProduct : ArrayList<Products>
            + AnimalAbstract()
            + areProductsAvailable()
            + feed()
            + getHunger()
            + getProducts()
            + getThirst()
            + isAlive()
            + update()
            + waterAnimal()
            - updateHunger()
            - updateProducts()
            - updateThirst()
        }
      }
    }
  }
  

  namespace model {
    namespace item {
      namespace animal {
        class model.item.animal.AnimalFactory {
            + createChicken()
            + createCow()
            + createGoat()
            + createPig()
        }
      }
    }
  }
  

  namespace model {
    namespace item {
      namespace animal {
        interface model.item.animal.AnimalInterface {
            {abstract} + feed()
            {abstract} + getHunger()
            {abstract} + getProducts()
            {abstract} + getThirst()
            {abstract} + isAlive()
            {abstract} + update()
            {abstract} + waterAnimal()
        }
      }
    }
  }
  

  namespace model {
    namespace item {
      namespace animal {
        class model.item.animal.ConcreteAnimal {
            + ConcreteAnimal()
        }
      }
    }
  }
  

  model.item.animal.AnimalAbstract .up.|> AnimalInterface
  model.item.animal.AnimalFactory .up.|> Serializable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
